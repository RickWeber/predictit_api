rm(list = ls())
library(tidyverse)
library(jsonlite)
url = 'https://www.predictit.org/api/marketdata/all'
data_list <- list()
API_call <- function(){
download.file(url,'PI.json')
data <- fromJSON("PI.json",simplifyDataFrame = TRUE) %>% tibble()
data <- data$'.'$markets
tibble(data)
}
for(t in 1:480){
time_used <- system.time(data_list[[t]] <- API_call())
sleep <- 60 - time_used
Sys.sleep(sleep)
}
for(t in 1:4){
time_used <- system.time(data_list[[t]] <- API_call())
sleep <- 60 - time_used
Sys.sleep(sleep)
print(dim(data_list))
}
version()
version
data_list
t <- full_join(data_list[[1]],data_list[[2]])
is(data_list[[1]])
is(data_list[[2]])
data_list[[1]] %>% full_join(data_list[[2]])
data_list[[1]] %>% rename(data1 = data) %>% full_join(data_list[[2]])
head(data_list[[1]])
t <- data_list[[1]]
names(t) <- c("id","name","shortName","img","url","contracts","timeStamp","open")
colnames(t) <- c("id","name","shortName","img","url","contracts","timeStamp","open")
colnames(t)
head(t)
head(t$data)
head(t)
head(t[1,]$data$contracts)
rm(list = ls())
library(tidyverse)
library(jsonlite)
url = 'https://www.predictit.org/api/marketdata/all'
download.file(url,'data.json')
data <- fromJSON("data.json",simplifyDataFrame = TRUE)
head(data)
head(unnest(data))
rm(list = ls())
library(tidyverse)
library(jsonlite)
url = 'https://www.predictit.org/api/marketdata/all'
download.file(url,'data.json')
data <- fromJSON("data.json",simplifyDataFrame = TRUE)
head(data)
?unnest
data %>% unnest(contracts) %>% head()
data %>% is# unnest(contracts) %>% head()
head(data)
t <- data %>% filter(dim(contracts)[1]==1)
t <- data[1,]
t <- data %>% filter(id == 2747)
t <- data$markets[id == 2747]
t <- data$markets[id == 2747,]
t <- data$markets['id' == 2747,]
head(t)
t <- data$markets %>% filter(id == 2747)
head(t)
head(data$markets)
data <- fromJSON("data.json",simplifyDataFrame = TRUE)
data <- data$markets
head(data)
t <- data %>% filter(id == 2747)
head(t)
head(data)
t$contracts
colnames(t$contracts)
is(t$contracts)
tibble(t$contracts)
t$contracts
t$contracts %>% is()
t$contracts %>% unlist()
t$contracts %>% tbl_df()
t$contracts %>% as.tibble()
t$contracts %>% tibble()
t$contracts
t$contracts %>% colnames()
t$contracts %>% names()
names(t$contracts)
unnest(t$contracts)
colnames(t$contracts)
names(t$contracts)
# colnames(t$contracts) # NULL
# names(t$contracts) # NULL
unlist(t$contracts)
# colnames(t$contracts) # NULL
# names(t$contracts) # NULL
# unlist(t$contracts) # nope... that's not gonna do it.
unnest(t$contracts)
# colnames(t$contracts) # NULL
# names(t$contracts) # NULL
# unlist(t$contracts) # nope... that's not gonna do it.
# unnest(t$contracts) # that won't work either...
is(t$contracts)
t$contracts
t2 <- t$contracts
tibble(t2)
tibble(t2)$.
tibble(t2)$\.
tibble(t2)$'.'
tibble(t2)$`.'
tibble(t2)$`.`
tibble(t2)$`.""
tibble(t2)$"."
tibble(t2)
tibble(t2)
t2 <- t$contracts
tibble(t2)
t2 <- t$contracts
is(t2)
head(t2)
t2 <- t$contracts[[1]]
head(t2)
t2
names(t)
t
colnames(t)
t
t <- t$contracts[[1]]
colnames(t)
colnames(t) <-
t
# colnames(t) <-
t
t <- data %>% filter(id == 2747)
t <- t$contracts[[1]]
colnames(t)
t
colnames(t)[c(1,3)] <- c("contract_id","contract_image")
# colnames(t) <-
t
data_cuban <- data %>% filter(id == 2747)
full_join(data_cuban,t)
C <- sapply(data,pull_out_contracts)
pull_out_contracts <- function(df_row){
contracts <- df_row$contracts[[1]]
colnames(contracts)[c(1,3)] <- c("contract_id","contract_image")
contracts
}
C <- sapply(data,pull_out_contracts)
C <- apply(X = data,MARGIN = 1,FUN = function(x) {
pull_out_contracts(x) %>% full_join(x)
}
)
?inner_join
